{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/utility/uml-util.js","../src/diagram/interaction/container-interaction.js","../src/diagram/ruler/ruler.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/diagram/interaction/selector.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/core/containers/grid.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                    (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                    if (container.rowIndex !== undefined) {\n                        var parent_1 = diagram.nameTable[container.parentId];\n                        if (parent_1.columns.length - 1 === container.columnIndex) {\n                            var x = wrapper.bounds.x;\n                            var y = wrapper.bounds.y;\n                            (wrapper).maxWidth = wrapper.outerBounds.width;\n                            parent_1.wrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width);\n                            diagram.drag(parent_1, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                            diagram.updateDiagramObject(parent_1);\n                        }\n                    }\n                    else {\n                        diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                    }\n                }\n                if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                    (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                    if (container.rowIndex !== undefined) {\n                        var contai = diagram.nameTable[container.parentId];\n                        var x = wrapper.bounds.x;\n                        var y = wrapper.bounds.y;\n                        (wrapper).maxHeight = wrapper.outerBounds.height;\n                        contai.wrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height);\n                        diagram.drag(contai, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                    }\n                    else {\n                        diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                    }\n                }\n            }\n            else if (container.container.type === 'Canvas') {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                diagram.deleteChild(obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.select([obj]);\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: 'red' }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    parentNode.wrapper.measure(new Size());\n    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node) {\n    if (!diagram.currentSymbol) {\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            if (node.parentId !== '') {\n                diagram.deleteChild(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            var entry = {\n                type: 'ChildCollectionChanged', category: 'Internal',\n                undoObject: undoObj, redoObject: cloneObject(node)\n            };\n            diagram.addHistoryEntry(entry);\n            diagram.updateDiagramObject(container);\n        }\n    }\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var orientation = node.shape.orientation === 'Horizontal' ? true : false;\n    if (node.shape.header) {\n        createRow(row, node.shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    var index = 0;\n    if (node.shape.header) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (node.shape.phases.length > 0) {\n        phaseDefine(grid, diagram, node, index, orientation);\n        index++;\n    }\n    if (node.shape.lanes.length > 0) {\n        for (var k = 0; k < node.shape.lanes.length; k++) {\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader) {\n    var node = new Node(parent, 'nodes', object);\n    node.parentId = grid.id;\n    if (isHeader) {\n        node.isHeader = true;\n    }\n    diagram.initObject(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n        }\n    }\n    return node.wrapper;\n}\n// /** @private */\n// export function addGridObject(\n//     diagram: Diagram, grid: Grid, object: NodeModel, isHeader?: boolean, rowValue?: number, colValue?: number,\n//     nodeObj?: NodeModel, orientation?: boolean, lanesNo?: number): void {\n//     let node: Node = new Node(object, 'nodes', { container: { type: 'Canvas', orientation: 'Horziontal' } });\n//     diagram.initObject(node as IElement);\n//     node.parentId = grid.id;\n//     if (isHeader) {\n//         (node as Node).isHeader = true;\n//     }\n//     diagram.nodes.push(node);\n//     let canvas: Container = node.wrapper;\n//     node.rowIndex = rowValue; node.columnIndex = colValue;\n//     canvas.children = [];\n//     if (nodeObj) {\n//         if (lanesNo !== undefined) {\n//             orientation ? canvas.verticalAlignment = 'Stretch' : canvas.horizontalAlignment = 'Stretch';\n//             canvas.relativeMode = 'Object';\n//             if (orientation) {\n//                 nodeObj.width = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             } else {\n//                 nodeObj.height = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             }\n//         }\n//         let node: Node = new Node(object, 'nodes', nodeObj);\n//         node.parentId = grid.id;\n//         node.rowIndex = rowValue; node.columnIndex = colValue;\n//         if (isHeader) {\n//             (node as Node).isHeader = true;\n//         }\n//         diagram.initObject(node);\n//         if (lanesNo === undefined) {\n//             if (isHeader) {\n//                 node.wrapper.horizontalAlignment = 'Stretch';\n//             } else {\n//                 orientation ? node.wrapper.horizontalAlignment = 'Stretch' : node.wrapper.verticalAlignment = 'Stretch';\n//             }\n//             canvas.horizontalAlignment = node.wrapper.horizontalAlignment;\n//             canvas.verticalAlignment = node.wrapper.verticalAlignment;\n//             canvas.relativeMode = node.wrapper.relativeMode = 'Object';\n//         } else {\n//             orientation ? node.wrapper.verticalAlignment = 'Stretch' : node.wrapper.horizontalAlignment = 'Stretch';\n//             node.wrapper.relativeMode = 'Object';\n//         }\n//         if (node.wrapper.children.length > 0) {\n//             for (let i: number = 0; i < node.wrapper.children.length; i++) {\n//                 let child: DiagramElement = node.wrapper.children[i];\n//                 if (child instanceof DiagramElement) {\n//                     child.isCalculateDesiredSize = false;\n//                 }\n//             }\n//         }\n//         canvas.children.push(node.wrapper);\n//     }\n//     grid.addObject(canvas, rowValue, colValue, 1, (isHeader) ? grid.columnDefinitions().length : 1);\n// }\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var node = {\n        annotations: [{ content: object.shape.header.content.content }],\n        style: object.shape.header.style,\n        rowIndex: 0, columnIndex: 0,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation) {\n    var rowValue = 0;\n    var colValue = 0;\n    for (var k = 0; k < object.shape.phases.length; k++) {\n        if (orientation) {\n            colValue = k;\n            rowValue = indexValue;\n        }\n        else {\n            rowValue = object.shape.header ? k + 1 : k;\n        }\n        var phaseObject = {\n            annotations: [{\n                    content: object.shape.phases[k].header.content.content,\n                    rotateAngle: orientation ? 0 : 270\n                }],\n            style: object.shape.phases[k].style,\n            rowIndex: rowValue, columnIndex: colValue,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var wrapper = addObjectToGrid(diagram, grid, object, phaseObject);\n        grid.addObject(wrapper, rowValue, colValue);\n    }\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var value = object.shape.phases.length || 1;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : 1;\n    var phaseCount = object.shape.phases.length > 0 ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        var canvas = {\n            id: object.shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            style: object.shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var parentWrapper = addObjectToGrid(diagram, grid, object, canvas);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            var laneNode = void 0;\n            laneNode = {\n                id: object.shape.lanes[laneIndex].id + '_header',\n                style: object.shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: object.shape.lanes[laneIndex].header.content.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            (orientation) ? laneNode.width = object.shape.lanes[laneIndex].header.width :\n                laneNode.height = object.shape.lanes[laneIndex].header.width;\n            var childWrapper = addObjectToGrid(diagram, grid, object, laneNode);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n// /** @private */\n// export function laneDefine(\n//     grid: Grid, diagram: Diagram, object: NodeModel, indexValue: number, laneIndex: number, orientation: boolean): void {\n//     let value: number = orientation ? grid.columnDefinitions().length : (object.shape as SwimLaneModel).phases.length || 1;\n//     let colValue: number = 0;\n//     let rowValue: number = 0;\n//     let phaseLength: number = (object.shape as SwimLaneModel).phases.length > 0 ? 1 : 0;\n//     rowValue = orientation ? indexValue : 1;\n//     for (let l: number = 0; l < value; l++) {\n//         colValue = orientation ? l : laneIndex + phaseLength;\n//         let node: NodeModel = {\n//             style: (object.shape as SwimLaneModel).lanes[laneIndex].style, width: object.width, height: object.height\n//         };\n//         addGridObject(diagram, grid, object, false, orientation ? rowValue : rowValue, colValue);\n//         if (l === 0) {\n//             let laneNode: NodeModel;\n//             laneNode = {\n//                 id: (object.shape as SwimLaneModel).lanes[laneIndex].id,\n//                 style: (object.shape as SwimLaneModel).lanes[laneIndex].header.style,\n//                 annotations: [{\n//                     content: (object.shape as SwimLaneModel).lanes[laneIndex].header.content.content,\n//                     rotateAngle: orientation ? 270 : 0\n//                 }],\n//                 container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n//             };\n//             addGridObject(diagram, grid, object, false, rowValue, orientation ? 0 : colValue, laneNode, orientation, laneIndex);\n//         }\n//         if (!orientation) {\n//             rowValue++;\n//         }\n//         colValue = orientation ? l : laneIndex + 1;\n//     }\n// }\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (object.shape.phases.length > 0) {\n            totalHeight += object.shape.phases[0].height;\n            createRow(row, object.shape.phases[0].height);\n        }\n        if (object.shape.lanes.length > 0) {\n            for (var i = 0; i < object.shape.lanes.length; i++) {\n                height = object.shape.lanes[i].height;\n                totalHeight += height;\n                if (i === object.shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (object.shape.phases.length > 0) {\n            for (var i = 0; i < object.shape.phases.length; i++) {\n                height = object.shape.phases[i].offset;\n                totalHeight += height;\n                if (i === object.shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    if (object.shape.phases.length > 0 && object.shape.orientation === 'Horizontal') {\n        for (var j = 0; j < object.shape.phases.length; j++) {\n            totalWidth += object.shape.phases[j].offset;\n            var cols = createColumn(object.shape.phases[j].offset);\n            if (j === object.shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        var value = object.shape.phases.length > 0 ? object.shape.lanes.length\n            + 1 : object.shape.lanes.length;\n        for (var j = 0; j < value; j++) {\n            if (j === 0 && object.shape.phases.length > 0) {\n                totalWidth += object.shape.phases[0].height;\n                var cols = createColumn(object.shape.phases[0].height);\n                columns.push(cols);\n            }\n            else {\n                totalWidth += object.shape.lanes[0].height;\n                var cols = createColumn(object.shape.lanes[0].height);\n                if (j === object.shape.lanes.length && totalWidth < object.width) {\n                    cols.width += object.width - totalWidth;\n                }\n                columns.push(cols);\n            }\n        }\n    }\n    else {\n        var cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n//#end region\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n            actualObject.wrapper.children[0].canMeasurePath = true;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].minWidth = row.cells[j].desiredCellWidth;\n                        }\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            row.cells[j].desiredCellHeight += (this.height - calculateHeight);\n                            if (row.cells[j].children && row.cells[j].children.length) {\n                                row.cells[j].children[0].minHeight = row.cells[j].desiredCellHeight;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height) {\n        var row = this.rows[rowId];\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].minHeight = height;\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width) {\n        if (this.width !== undefined) {\n            this.width += width - this.rows[0].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].minWidth = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            this.rowDefns.push(rowDefn);\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            defaultCell.width = this.width;\n            var columns = this.colDefns;\n            this.addCellInRow(columns, rowDefn, row);\n            if (rowId > this.rows.length - 1) {\n                this.rows.push(row);\n            }\n            else {\n                this.rows.splice(rowId, 0, row);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, columns) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            var rowDefn = this.rowDefns[i];\n            for (var j = 0; j < columns.length; j++) {\n                var colDefn = columns[j];\n                var cell = new GridCell();\n                cell.style = this.cellStyle;\n                cell.desiredCellWidth = colDefn.width;\n                cell.desiredCellHeight = rowDefn.height;\n                if (columnId > row.cells.length - 1) {\n                    row.cells.push(cell);\n                }\n                else {\n                    row.cells.splice(columnId, 0, cell);\n                }\n                this.children.push(cell);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            var cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            var j = 0;\n            var i = 0;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                for (var i_1 = 0; i_1 < this.rows.length; i_1++) {\n                    var row = this.rows[i_1];\n                    for (var j_1 = 0; j_1 < row.cells.length; j_1++) {\n                        var cell = row.cells[j_1];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            var k = void 0;\n                            var z = void 0;\n                            for (k = i_1, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                var removeCelll = this.rows[k + 1].cells[j_1];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCelll), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from '../interaction/container-interaction';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"childNodes\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"height\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"width\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property('10')\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], SwimLane.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate && (!avoidDrawSelector(this.rendererActions))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var node = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                    this.commandHandler.dropChildToContainer(this.currentTarget, node);\n                    this.commandHandler.renderContainerHelper(node);\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                if (!this.commandHandler.isParentAsContainer((args.source instanceof Selector) ? args.source.nodes[0] : args.source, true)) {\n                    this.commandHandler.drawHighlighter(this.currentTarget);\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter } from './container-interaction';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var hasStack = this.updateContainerProperties();\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                    if (hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (this.diagram.selectedObject.helperObject) {\n                    var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    var obj = this.diagram.selectedObject.actualObject;\n                    this.diagram.updateDiagramObject(obj);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                    updateCanvasBounds(this.diagram, obj, this.eventArgs.position, boundsUpdate);\n                    this.diagram.updateSelector();\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var hasGroup;\n        if (this.diagram.selectedObject.helperObject) {\n            helperObject = this.diagram.selectedObject.helperObject;\n            this.diagram.selectedItems.wrapper.children[0].offsetX = helperObject.wrapper.offsetX;\n            this.diagram.selectedItems.wrapper.children[0].offsetY = helperObject.wrapper.offsetY;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.width = helperObject.wrapper.actualSize.width;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.height = helperObject.wrapper.actualSize.height;\n            var obj = this.diagram.selectedObject.actualObject;\n            obj.offsetX = helperObject.offsetX;\n            obj.offsetY = helperObject.offsetY;\n            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                obj.width = helperObject.width;\n                obj.height = helperObject.height;\n            }\n            obj.rotateAngle = helperObject.rotateAngle;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            var undoElement = void 0;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                this.diagram.startGroupAction();\n                hasGroup = true;\n            }\n            if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                undoElement = {\n                    targetIndex: undefined, target: undefined,\n                    sourceIndex: index, source: clone(obj)\n                };\n                if (index > -1) {\n                    var children = parentNode.children;\n                    children.splice(children.indexOf(obj.id), 1);\n                    this.diagram.nameTable[obj.id].parentId = '';\n                    hasStack = true;\n                    parentNode.wrapper.children.splice(index, 1);\n                }\n            }\n            moveChildInStack(obj, target, this.diagram, this.action);\n            parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                (this.diagram.nameTable[obj.parentId] || obj);\n            if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.wrapper.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                parentNode.wrapper.maxHeight = parentNode.wrapper.actualSize.height;\n                isChangeProperties = true;\n            }\n            if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                checkChildNodeInContainer(this.diagram, obj);\n            }\n            else {\n                if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                    var container = ((parentNode.shape.type === 'SwimLane') ?\n                        parentNode.wrapper.children[0] : parentNode.wrapper);\n                    var x = parentNode.wrapper.bounds.x;\n                    var y = parentNode.wrapper.bounds.y;\n                    if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' && obj.rowIndex === 1) ||\n                        (parentNode.container.orientation === 'Vertical' && obj.rowIndex > 0 && obj.columnIndex > 0)) {\n                        container.updateColumnWidth(obj.columnIndex, helperObject.width);\n                    }\n                    else if (obj.rowIndex !== undefined) {\n                        container.updateRowHeight(obj.rowIndex, helperObject.height);\n                    }\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                        width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY,\n                        width: obj.width, height: obj.height,\n                        rotateAngle: obj.rotateAngle\n                    });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            if (isChangeProperties) {\n                parentNode.maxWidth = undefined;\n                parentNode.wrapper.maxWidth = undefined;\n                parentNode.maxHeight = undefined;\n                parentNode.wrapper.maxHeight = undefined;\n            }\n            if (hasStack) {\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    width: parentNode.width, height: parentNode.height,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                var entry = {\n                    type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.diagram.addHistoryEntry(entry);\n                }\n            }\n        }\n        return hasGroup;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper, findBounds } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    if (checkParentAsContainer(this.diagram, selectorModel.nodes[0], true)) {\n                        var parentNode = this.diagram.nameTable[selectorModel.nodes[0].parentId];\n                        if (parentNode && parentNode.container.type === 'Grid') {\n                            var canvas = new Canvas();\n                            canvas.children = [];\n                            var element = new DiagramElement();\n                            if (selectorModel.nodes[0].rowIndex && selectorModel.nodes[0].rowIndex > 0) {\n                                if ((parentNode.container.orientation === 'Horizontal' && selectorModel.nodes[0].rowIndex === 1) ||\n                                    (parentNode.container.orientation === 'Vertical' &&\n                                        selectorModel.nodes[0].rowIndex > 0 && selectorModel.nodes[0].columnIndex > 0)) {\n                                    var bounds = findBounds(parentNode, selectorModel.nodes[0].columnIndex, true);\n                                    canvas.offsetX = bounds.center.x;\n                                    canvas.offsetY = bounds.center.y;\n                                    element.width = bounds.width;\n                                    element.height = bounds.height;\n                                }\n                                else {\n                                    canvas.offsetX = parentNode.offsetX;\n                                    canvas.offsetY = selectorModel.nodes[0].wrapper.offsetY;\n                                    element.width = parentNode.wrapper.actualSize.width;\n                                    element.height = selectorModel.nodes[0].wrapper.actualSize.height;\n                                }\n                            }\n                            canvas.children.push(element);\n                            canvas.measure(new Size());\n                            canvas.arrange(canvas.desiredSize);\n                            selectorModel.wrapper.children[0] = canvas;\n                        }\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n        }\n        if (source && target && source.parentId && target.parentId && (source.parentId === target.parentId)\n            && (source.id !== target.id) && (this.diagram.nameTable[target.parentId].container &&\n            this.diagram.nameTable[target.parentId].container.type === 'Stack')) {\n            var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n            renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child = selector.nodes[0];\n                if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child.rowIndex > 0 && child.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = node.wrapper.children[0];\n                                var child_1 = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                                this.select(this.diagram.nameTable[child_1.children[0].children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = void 0;\n                                var child_2;\n                                wrapper = node.wrapper.children[0];\n                                child_2 = wrapper.rows[wrapper.rows.length - 1].cells[wrapper.rows[wrapper.rows.length - 1].cells.length - 1];\n                                this.select(this.diagram.nameTable[child_2.children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (selector.nodes[0].shape.type === 'SwimLane') {\n                    node = selector.nodes[0];\n                    var wrapper = void 0;\n                    var child = void 0;\n                    var index = void 0;\n                    if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Vertical')) {\n                        wrapper = node.wrapper.children[0];\n                        child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if (corner === 'ResizeEast') {\n                        wrapper = node.wrapper.children[0];\n                        index = (selector.nodes[0].shape.header) ? 1 : 0;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Horizontal')) {\n                        wrapper = node.wrapper.children[0];\n                        index = wrapper.rows.length - 1;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer } from './interaction/container-interaction';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_1 = this.nameTable[obj.parentId];\n                        parent_1.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_1.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_1.wrapper.measure(new Size());\n                        parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_1);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (obj.id !== 'helper') {\n                            this.triggerEvent(DiagramEvent.collectionChange, args);\n                        }\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                this.updateDiagramObject(parentNode);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                    }\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        if (canvas instanceof GridPanel) {\n            canvas.arrange(canvas.desiredSize, true);\n        }\n        else {\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.shape.type === 'SwimLane') {\n            var nodesCollection = [];\n            var rowvalue = void 0;\n            var orientation_1 = obj.shape.orientation === 'Horizontal' ? true : false;\n            if (orientation_1) {\n                rowvalue = (obj.shape.header ? 1 : 0)\n                    + (obj.shape.phases.length > 0 ? 1 : 0);\n            }\n            else {\n                rowvalue = (obj.shape.header ? 1 : 0);\n            }\n            var columnValue = void 0;\n            if (orientation_1) {\n                columnValue = 0;\n            }\n            else {\n                columnValue = obj.shape.phases.length > 0 ? 1 : 0;\n            }\n            var grid = obj.wrapper.children[0];\n            if (obj.shape.lanes.length > 0) {\n                for (var i = 0; i < obj.shape.lanes.length; i++) {\n                    for (var j = 0; j < obj.shape.lanes[i].childNodes.length; j++) {\n                        var node = obj.shape.lanes[i].childNodes[j];\n                        node.parentId = grid.rows[rowvalue].cells[columnValue].children[0].id;\n                        this.initObject(node);\n                        this.nodes.push(node);\n                        nodesCollection.push(node);\n                        var canvas_1 = node.wrapper;\n                        if (orientation_1) {\n                            columnValue = 0;\n                        }\n                        if (orientation_1 && canvas_1.actualSize.width + canvas_1.margin.left > grid.rows[rowvalue].cells[0].actualSize.width) {\n                            columnValue++;\n                            canvas_1.margin.left = canvas_1.margin.left - grid.rows[rowvalue].cells[0].actualSize.width;\n                        }\n                        canvas_1.measure(new Size(node.width, node.height));\n                        canvas_1.arrange(canvas_1.desiredSize);\n                        grid.rows[rowvalue].cells[columnValue].children[0].children.push(canvas_1);\n                    }\n                    orientation_1 ? rowvalue++ : columnValue++;\n                }\n            }\n            grid.measure(new Size(obj.width, obj.height));\n            grid.arrange(canvas.desiredSize);\n            for (var i = 0; i < nodesCollection.length; i++) {\n                nodesCollection[i].offsetX = nodesCollection[i].wrapper.offsetX;\n                nodesCollection[i].offsetY = nodesCollection[i].wrapper.offsetY;\n            }\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, false);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (!(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                        var stack = selectorModel.nodes[0];\n                        if (stack.shape.type !== 'UmlClassifier' && (!(stack.parentId || this.nameTable[stack.parentId]\n                            && this.nameTable[stack.parentId].shape.type === 'UmlClassifier'))) {\n                            selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                            var stackPanel = selectorModel.nodes[0];\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_2 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_2.children) {\n                        for (var _i = 0, _a = parent_2.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_3 = this.nameTable[actualObject.parentId];\n                    parent_3.wrapper.measure(new Size(parent_3.wrapper.width, actualObject.wrapper.height));\n                    parent_3.wrapper.arrange(parent_3.wrapper.desiredSize);\n                    parent_3.offsetX = parent_3.wrapper.offsetX;\n                    parent_3.offsetY = parent_3.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        newNode = _this.add(group);\n                                    }\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = child2.width / 2;\n                                    lane.offsetY = (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = child1.width / 2;\n                                header.offsetY = child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    _this.removeChildNodes(_this.currentSymbol);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    if (arg.target && (arg.target instanceof Node) && checkParentAsContainer(_this, arg.target)\n                        && canAllowDrop(arg.target)) {\n                        addChildToContainer(_this, arg.target, clonedObject);\n                    }\n                    else {\n                        _this.add(clonedObject, true);\n                    }\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.removeChildNodes = function (node) {\n        if (node instanceof Node && node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                if (this.nameTable[node.children[i]].children) {\n                    this.removeChildNodes(node);\n                }\n                this.removeFromAQuad(this.nameTable[node.children[i]]);\n                this.removeObjectsFromLayer(this.nameTable[node.children[i]]);\n                delete this.nameTable[node.children[i]];\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size } from '../index';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode;\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (actualObject.parentId) {\n            parentNode = diagram.nameTable[actualObject.parentId];\n            parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n            parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n        }\n        if (entryObject.parentId !== '') {\n            parentNode = diagram.nameTable[entryObject.parentId];\n            parentNode.children.push(entryObject.id);\n            parentNode.wrapper.children.push(actualObject.wrapper);\n        }\n        actualObject.parentId = entryObject.parentId;\n        diagram.updateDiagramObject(actualObject);\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.content.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data =\n                            'M' + 20 + ',' + (laneHeight / 2) + ' L' + (laneWidth - 20) + ',' + (laneHeight / 2) + 'z';\n                    }\n                    else {\n                        symbol.shape.data =\n                            'M' + (laneWidth / 2) + ',' + 20 + ' L' + (laneWidth / 2) + ',' + (laneHeight - 20) + 'z';\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = isLane ? this.laneTable[obj.id].width :\n                        this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = isLane ? this.laneTable[obj.id].height :\n                        this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","topRight","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","avoidDrawSelector","rendererActions","RendererAction","PreventRenderSelector","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","ReadOnly","verticalAlignment","horizontalAlignment","initObject","nodes","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","checkParentAsContainer","nameTable","parentId","rowIndex","parent_1","columns","columnIndex","updateColumnWidth","drag","updateDiagramObject","scale","contai","maxHeight","updateRowHeight","undoObj","cloneObject","clearSelection","deleteChild","entry","category","undoObject","redoObject","addHistoryEntry","select","findBounds","isHeader","rect","Rect","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","renderContainerHelper","selectedObject","helperObject","connectors","actualObject","selectedItems","minWidth","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","Size","arrange","desiredSize","addChildToContainer","parent","currentSymbol","indexOf","addChild","renderStackHighlighter","isVertical","isUml","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","commandHandler","initSwimLane","grid","row","header","createRow","initGridRow","initGridColumns","setDefinitions","index","headerDefine","phases","phaseDefine","lanes","k","laneCollection","addObjectToGrid","DiagramElement","isCalculateDesiredSize","addObject","columnDefinitions","indexValue","rowValue","colValue","laneIndex","phaseCount","parentWrapper","laneNode","childWrapper","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","totalWidth","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","getBounds","getAnnotationPosition","annotation","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","key","cx","cy","fx","fy","stops","updateGradient","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","Text","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","Canvas","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","measureElement","window","pathNode","getChildNode","setAttributeNS","bBox","newPathString","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","measurePath","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","getHTMLLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","conn","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","PointPort","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","padding","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","translatedPts","translatePoints","template","nativeSVG","measureNativeContent","contentSize","templatePosition","getAvailableSize","measureNativeSvg","canMeasure","textNodes","textWrapBounds","imageSource","stretch","measureImage","leftMargin","topMargin","isStack","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","UserHandle","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","GridPanel","childTable","cellStyle","desiredRowHeight","desiredCellWidth","colDefns","rowId","columnId","rowSpan","columnSpan","cell","GridCellItem","addObjectToCell","updateProperties","rowDefns","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","desiredCellHeight","calculateSize","calculateHeight","calculateWidth","colId","addRow","addColumn","removeRow","removeColumn","updateRowIndex","currentIndex","newIndex","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","i_1","z","removeCelll","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","UmlActivityShape","UmlClassifierShape","SwimLane","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","isCanvasUpdate","processId","umlIndex","outEdges","inEdges","isLane","isPhase","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","Header","Lane","Phase","ChildContainer","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","endGroupAction","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","detail","which","isMultipleSelect","hasStack","updateContainerProperties","addUmlNode","boundsUpdate","renderSelector","click","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","hasGroup","isChangeProperties","UndoRedo","innerNode","zIndex","updateConnectorEdges","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyManager","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","highlighter","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","child_2","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","addConstraints","constraintsType","constraintsValue","removeConstraints","labels","removelabelExtension","element_1","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","nodesCollection","rowvalue","orientation_1","columnValue","canvas_1","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","updateGridContainer","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","stackPanel","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","isLayout","existingBounds","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","isMeasure","updateAnnotationContent","updateAnnotationWrapper","portWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","lane","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","swimLaneObj","laneObj","child1","child2","findChild","removeChildNodes","addChildNodes","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","measureElemnt","initSymbols","symbolGroup","laneHeight","laneWidth","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","getNativeLayer","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}