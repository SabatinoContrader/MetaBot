{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/objects/tooltip.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/connector.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/ruler/ruler.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/appearance.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/interaction/selector.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/core/containers/grid.js","../../src/diagram/objects/node.js","../../src/ruler/ruler.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                    (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                    if (container.rowIndex !== undefined) {\n                        var parent_1 = diagram.nameTable[container.parentId];\n                        if (parent_1.columns.length - 1 === container.columnIndex) {\n                            var x = wrapper.bounds.x;\n                            var y = wrapper.bounds.y;\n                            (wrapper).maxWidth = wrapper.outerBounds.width;\n                            parent_1.wrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width);\n                            diagram.drag(parent_1, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                            diagram.updateDiagramObject(parent_1);\n                        }\n                    }\n                    else {\n                        diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                    }\n                }\n                if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                    (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                    if (container.rowIndex !== undefined) {\n                        var contai = diagram.nameTable[container.parentId];\n                        var x = wrapper.bounds.x;\n                        var y = wrapper.bounds.y;\n                        (wrapper).maxHeight = wrapper.outerBounds.height;\n                        contai.wrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height);\n                        diagram.drag(contai, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                    }\n                    else {\n                        diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                    }\n                }\n            }\n            else if (container.container.type === 'Canvas') {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                diagram.deleteChild(obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.select([obj]);\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: 'red' }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    parentNode.wrapper.measure(new Size());\n    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node) {\n    if (!diagram.currentSymbol) {\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            if (node.parentId !== '') {\n                diagram.deleteChild(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            var entry = {\n                type: 'ChildCollectionChanged', category: 'Internal',\n                undoObject: undoObj, redoObject: cloneObject(node)\n            };\n            diagram.addHistoryEntry(entry);\n            diagram.updateDiagramObject(container);\n        }\n    }\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var orientation = node.shape.orientation === 'Horizontal' ? true : false;\n    if (node.shape.header) {\n        createRow(row, node.shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    var index = 0;\n    if (node.shape.header) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (node.shape.phases.length > 0) {\n        phaseDefine(grid, diagram, node, index, orientation);\n        index++;\n    }\n    if (node.shape.lanes.length > 0) {\n        for (var k = 0; k < node.shape.lanes.length; k++) {\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader) {\n    var node = new Node(parent, 'nodes', object);\n    node.parentId = grid.id;\n    if (isHeader) {\n        node.isHeader = true;\n    }\n    diagram.initObject(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n        }\n    }\n    return node.wrapper;\n}\n// /** @private */\n// export function addGridObject(\n//     diagram: Diagram, grid: Grid, object: NodeModel, isHeader?: boolean, rowValue?: number, colValue?: number,\n//     nodeObj?: NodeModel, orientation?: boolean, lanesNo?: number): void {\n//     let node: Node = new Node(object, 'nodes', { container: { type: 'Canvas', orientation: 'Horziontal' } });\n//     diagram.initObject(node as IElement);\n//     node.parentId = grid.id;\n//     if (isHeader) {\n//         (node as Node).isHeader = true;\n//     }\n//     diagram.nodes.push(node);\n//     let canvas: Container = node.wrapper;\n//     node.rowIndex = rowValue; node.columnIndex = colValue;\n//     canvas.children = [];\n//     if (nodeObj) {\n//         if (lanesNo !== undefined) {\n//             orientation ? canvas.verticalAlignment = 'Stretch' : canvas.horizontalAlignment = 'Stretch';\n//             canvas.relativeMode = 'Object';\n//             if (orientation) {\n//                 nodeObj.width = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             } else {\n//                 nodeObj.height = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             }\n//         }\n//         let node: Node = new Node(object, 'nodes', nodeObj);\n//         node.parentId = grid.id;\n//         node.rowIndex = rowValue; node.columnIndex = colValue;\n//         if (isHeader) {\n//             (node as Node).isHeader = true;\n//         }\n//         diagram.initObject(node);\n//         if (lanesNo === undefined) {\n//             if (isHeader) {\n//                 node.wrapper.horizontalAlignment = 'Stretch';\n//             } else {\n//                 orientation ? node.wrapper.horizontalAlignment = 'Stretch' : node.wrapper.verticalAlignment = 'Stretch';\n//             }\n//             canvas.horizontalAlignment = node.wrapper.horizontalAlignment;\n//             canvas.verticalAlignment = node.wrapper.verticalAlignment;\n//             canvas.relativeMode = node.wrapper.relativeMode = 'Object';\n//         } else {\n//             orientation ? node.wrapper.verticalAlignment = 'Stretch' : node.wrapper.horizontalAlignment = 'Stretch';\n//             node.wrapper.relativeMode = 'Object';\n//         }\n//         if (node.wrapper.children.length > 0) {\n//             for (let i: number = 0; i < node.wrapper.children.length; i++) {\n//                 let child: DiagramElement = node.wrapper.children[i];\n//                 if (child instanceof DiagramElement) {\n//                     child.isCalculateDesiredSize = false;\n//                 }\n//             }\n//         }\n//         canvas.children.push(node.wrapper);\n//     }\n//     grid.addObject(canvas, rowValue, colValue, 1, (isHeader) ? grid.columnDefinitions().length : 1);\n// }\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var node = {\n        annotations: [{ content: object.shape.header.content.content }],\n        style: object.shape.header.style,\n        rowIndex: 0, columnIndex: 0,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation) {\n    var rowValue = 0;\n    var colValue = 0;\n    for (var k = 0; k < object.shape.phases.length; k++) {\n        if (orientation) {\n            colValue = k;\n            rowValue = indexValue;\n        }\n        else {\n            rowValue = object.shape.header ? k + 1 : k;\n        }\n        var phaseObject = {\n            annotations: [{\n                    content: object.shape.phases[k].header.content.content,\n                    rotateAngle: orientation ? 0 : 270\n                }],\n            style: object.shape.phases[k].style,\n            rowIndex: rowValue, columnIndex: colValue,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var wrapper = addObjectToGrid(diagram, grid, object, phaseObject);\n        grid.addObject(wrapper, rowValue, colValue);\n    }\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var value = object.shape.phases.length || 1;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : 1;\n    var phaseCount = object.shape.phases.length > 0 ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        var canvas = {\n            id: object.shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            style: object.shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var parentWrapper = addObjectToGrid(diagram, grid, object, canvas);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            var laneNode = void 0;\n            laneNode = {\n                id: object.shape.lanes[laneIndex].id + '_header',\n                style: object.shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: object.shape.lanes[laneIndex].header.content.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            (orientation) ? laneNode.width = object.shape.lanes[laneIndex].header.width :\n                laneNode.height = object.shape.lanes[laneIndex].header.width;\n            var childWrapper = addObjectToGrid(diagram, grid, object, laneNode);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n// /** @private */\n// export function laneDefine(\n//     grid: Grid, diagram: Diagram, object: NodeModel, indexValue: number, laneIndex: number, orientation: boolean): void {\n//     let value: number = orientation ? grid.columnDefinitions().length : (object.shape as SwimLaneModel).phases.length || 1;\n//     let colValue: number = 0;\n//     let rowValue: number = 0;\n//     let phaseLength: number = (object.shape as SwimLaneModel).phases.length > 0 ? 1 : 0;\n//     rowValue = orientation ? indexValue : 1;\n//     for (let l: number = 0; l < value; l++) {\n//         colValue = orientation ? l : laneIndex + phaseLength;\n//         let node: NodeModel = {\n//             style: (object.shape as SwimLaneModel).lanes[laneIndex].style, width: object.width, height: object.height\n//         };\n//         addGridObject(diagram, grid, object, false, orientation ? rowValue : rowValue, colValue);\n//         if (l === 0) {\n//             let laneNode: NodeModel;\n//             laneNode = {\n//                 id: (object.shape as SwimLaneModel).lanes[laneIndex].id,\n//                 style: (object.shape as SwimLaneModel).lanes[laneIndex].header.style,\n//                 annotations: [{\n//                     content: (object.shape as SwimLaneModel).lanes[laneIndex].header.content.content,\n//                     rotateAngle: orientation ? 270 : 0\n//                 }],\n//                 container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n//             };\n//             addGridObject(diagram, grid, object, false, rowValue, orientation ? 0 : colValue, laneNode, orientation, laneIndex);\n//         }\n//         if (!orientation) {\n//             rowValue++;\n//         }\n//         colValue = orientation ? l : laneIndex + 1;\n//     }\n// }\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (object.shape.phases.length > 0) {\n            totalHeight += object.shape.phases[0].height;\n            createRow(row, object.shape.phases[0].height);\n        }\n        if (object.shape.lanes.length > 0) {\n            for (var i = 0; i < object.shape.lanes.length; i++) {\n                height = object.shape.lanes[i].height;\n                totalHeight += height;\n                if (i === object.shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (object.shape.phases.length > 0) {\n            for (var i = 0; i < object.shape.phases.length; i++) {\n                height = object.shape.phases[i].offset;\n                totalHeight += height;\n                if (i === object.shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    if (object.shape.phases.length > 0 && object.shape.orientation === 'Horizontal') {\n        for (var j = 0; j < object.shape.phases.length; j++) {\n            totalWidth += object.shape.phases[j].offset;\n            var cols = createColumn(object.shape.phases[j].offset);\n            if (j === object.shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        var value = object.shape.phases.length > 0 ? object.shape.lanes.length\n            + 1 : object.shape.lanes.length;\n        for (var j = 0; j < value; j++) {\n            if (j === 0 && object.shape.phases.length > 0) {\n                totalWidth += object.shape.phases[0].height;\n                var cols = createColumn(object.shape.phases[0].height);\n                columns.push(cols);\n            }\n            else {\n                totalWidth += object.shape.lanes[0].height;\n                var cols = createColumn(object.shape.lanes[0].height);\n                if (j === object.shape.lanes.length && totalWidth < object.width) {\n                    cols.width += object.width - totalWidth;\n                }\n                columns.push(cols);\n            }\n        }\n    }\n    else {\n        var cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n//#end region\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n            actualObject.wrapper.children[0].canMeasurePath = true;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].minWidth = row.cells[j].desiredCellWidth;\n                        }\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            row.cells[j].desiredCellHeight += (this.height - calculateHeight);\n                            if (row.cells[j].children && row.cells[j].children.length) {\n                                row.cells[j].children[0].minHeight = row.cells[j].desiredCellHeight;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height) {\n        var row = this.rows[rowId];\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].minHeight = height;\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width) {\n        if (this.width !== undefined) {\n            this.width += width - this.rows[0].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].minWidth = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            this.rowDefns.push(rowDefn);\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            defaultCell.width = this.width;\n            var columns = this.colDefns;\n            this.addCellInRow(columns, rowDefn, row);\n            if (rowId > this.rows.length - 1) {\n                this.rows.push(row);\n            }\n            else {\n                this.rows.splice(rowId, 0, row);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, columns) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            var rowDefn = this.rowDefns[i];\n            for (var j = 0; j < columns.length; j++) {\n                var colDefn = columns[j];\n                var cell = new GridCell();\n                cell.style = this.cellStyle;\n                cell.desiredCellWidth = colDefn.width;\n                cell.desiredCellHeight = rowDefn.height;\n                if (columnId > row.cells.length - 1) {\n                    row.cells.push(cell);\n                }\n                else {\n                    row.cells.splice(columnId, 0, cell);\n                }\n                this.children.push(cell);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            var cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            var j = 0;\n            var i = 0;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                for (var i_1 = 0; i_1 < this.rows.length; i_1++) {\n                    var row = this.rows[i_1];\n                    for (var j_1 = 0; j_1 < row.cells.length; j_1++) {\n                        var cell = row.cells[j_1];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            var k = void 0;\n                            var z = void 0;\n                            for (k = i_1, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                var removeCelll = this.rows[k + 1].cells[j_1];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCelll), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from '../interaction/container-interaction';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"childNodes\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"height\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"width\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property('10')\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], SwimLane.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate && (!avoidDrawSelector(this.rendererActions))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var node = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                    this.commandHandler.dropChildToContainer(this.currentTarget, node);\n                    this.commandHandler.renderContainerHelper(node);\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                if (!this.commandHandler.isParentAsContainer((args.source instanceof Selector) ? args.source.nodes[0] : args.source, true)) {\n                    this.commandHandler.drawHighlighter(this.currentTarget);\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter } from './container-interaction';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var hasStack = this.updateContainerProperties();\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                    if (hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (this.diagram.selectedObject.helperObject) {\n                    var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    var obj = this.diagram.selectedObject.actualObject;\n                    this.diagram.updateDiagramObject(obj);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                    updateCanvasBounds(this.diagram, obj, this.eventArgs.position, boundsUpdate);\n                    this.diagram.updateSelector();\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var hasGroup;\n        if (this.diagram.selectedObject.helperObject) {\n            helperObject = this.diagram.selectedObject.helperObject;\n            this.diagram.selectedItems.wrapper.children[0].offsetX = helperObject.wrapper.offsetX;\n            this.diagram.selectedItems.wrapper.children[0].offsetY = helperObject.wrapper.offsetY;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.width = helperObject.wrapper.actualSize.width;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.height = helperObject.wrapper.actualSize.height;\n            var obj = this.diagram.selectedObject.actualObject;\n            obj.offsetX = helperObject.offsetX;\n            obj.offsetY = helperObject.offsetY;\n            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                obj.width = helperObject.width;\n                obj.height = helperObject.height;\n            }\n            obj.rotateAngle = helperObject.rotateAngle;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            var undoElement = void 0;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                this.diagram.startGroupAction();\n                hasGroup = true;\n            }\n            if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                undoElement = {\n                    targetIndex: undefined, target: undefined,\n                    sourceIndex: index, source: clone(obj)\n                };\n                if (index > -1) {\n                    var children = parentNode.children;\n                    children.splice(children.indexOf(obj.id), 1);\n                    this.diagram.nameTable[obj.id].parentId = '';\n                    hasStack = true;\n                    parentNode.wrapper.children.splice(index, 1);\n                }\n            }\n            moveChildInStack(obj, target, this.diagram, this.action);\n            parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                (this.diagram.nameTable[obj.parentId] || obj);\n            if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.wrapper.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                parentNode.wrapper.maxHeight = parentNode.wrapper.actualSize.height;\n                isChangeProperties = true;\n            }\n            if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                checkChildNodeInContainer(this.diagram, obj);\n            }\n            else {\n                if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                    var container = ((parentNode.shape.type === 'SwimLane') ?\n                        parentNode.wrapper.children[0] : parentNode.wrapper);\n                    var x = parentNode.wrapper.bounds.x;\n                    var y = parentNode.wrapper.bounds.y;\n                    if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' && obj.rowIndex === 1) ||\n                        (parentNode.container.orientation === 'Vertical' && obj.rowIndex > 0 && obj.columnIndex > 0)) {\n                        container.updateColumnWidth(obj.columnIndex, helperObject.width);\n                    }\n                    else if (obj.rowIndex !== undefined) {\n                        container.updateRowHeight(obj.rowIndex, helperObject.height);\n                    }\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                        width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY,\n                        width: obj.width, height: obj.height,\n                        rotateAngle: obj.rotateAngle\n                    });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            if (isChangeProperties) {\n                parentNode.maxWidth = undefined;\n                parentNode.wrapper.maxWidth = undefined;\n                parentNode.maxHeight = undefined;\n                parentNode.wrapper.maxHeight = undefined;\n            }\n            if (hasStack) {\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    width: parentNode.width, height: parentNode.height,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                var entry = {\n                    type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.diagram.addHistoryEntry(entry);\n                }\n            }\n        }\n        return hasGroup;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper, findBounds } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    if (checkParentAsContainer(this.diagram, selectorModel.nodes[0], true)) {\n                        var parentNode = this.diagram.nameTable[selectorModel.nodes[0].parentId];\n                        if (parentNode && parentNode.container.type === 'Grid') {\n                            var canvas = new Canvas();\n                            canvas.children = [];\n                            var element = new DiagramElement();\n                            if (selectorModel.nodes[0].rowIndex && selectorModel.nodes[0].rowIndex > 0) {\n                                if ((parentNode.container.orientation === 'Horizontal' && selectorModel.nodes[0].rowIndex === 1) ||\n                                    (parentNode.container.orientation === 'Vertical' &&\n                                        selectorModel.nodes[0].rowIndex > 0 && selectorModel.nodes[0].columnIndex > 0)) {\n                                    var bounds = findBounds(parentNode, selectorModel.nodes[0].columnIndex, true);\n                                    canvas.offsetX = bounds.center.x;\n                                    canvas.offsetY = bounds.center.y;\n                                    element.width = bounds.width;\n                                    element.height = bounds.height;\n                                }\n                                else {\n                                    canvas.offsetX = parentNode.offsetX;\n                                    canvas.offsetY = selectorModel.nodes[0].wrapper.offsetY;\n                                    element.width = parentNode.wrapper.actualSize.width;\n                                    element.height = selectorModel.nodes[0].wrapper.actualSize.height;\n                                }\n                            }\n                            canvas.children.push(element);\n                            canvas.measure(new Size());\n                            canvas.arrange(canvas.desiredSize);\n                            selectorModel.wrapper.children[0] = canvas;\n                        }\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n        }\n        if (source && target && source.parentId && target.parentId && (source.parentId === target.parentId)\n            && (source.id !== target.id) && (this.diagram.nameTable[target.parentId].container &&\n            this.diagram.nameTable[target.parentId].container.type === 'Stack')) {\n            var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n            renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child = selector.nodes[0];\n                if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child.rowIndex > 0 && child.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = node.wrapper.children[0];\n                                var child_1 = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                                this.select(this.diagram.nameTable[child_1.children[0].children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = void 0;\n                                var child_2;\n                                wrapper = node.wrapper.children[0];\n                                child_2 = wrapper.rows[wrapper.rows.length - 1].cells[wrapper.rows[wrapper.rows.length - 1].cells.length - 1];\n                                this.select(this.diagram.nameTable[child_2.children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (selector.nodes[0].shape.type === 'SwimLane') {\n                    node = selector.nodes[0];\n                    var wrapper = void 0;\n                    var child = void 0;\n                    var index = void 0;\n                    if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Vertical')) {\n                        wrapper = node.wrapper.children[0];\n                        child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if (corner === 'ResizeEast') {\n                        wrapper = node.wrapper.children[0];\n                        index = (selector.nodes[0].shape.header) ? 1 : 0;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Horizontal')) {\n                        wrapper = node.wrapper.children[0];\n                        index = wrapper.rows.length - 1;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer } from './interaction/container-interaction';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_1 = this.nameTable[obj.parentId];\n                        parent_1.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_1.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_1.wrapper.measure(new Size());\n                        parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_1);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (obj.id !== 'helper') {\n                            this.triggerEvent(DiagramEvent.collectionChange, args);\n                        }\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                this.updateDiagramObject(parentNode);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                    }\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        if (canvas instanceof GridPanel) {\n            canvas.arrange(canvas.desiredSize, true);\n        }\n        else {\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.shape.type === 'SwimLane') {\n            var nodesCollection = [];\n            var rowvalue = void 0;\n            var orientation_1 = obj.shape.orientation === 'Horizontal' ? true : false;\n            if (orientation_1) {\n                rowvalue = (obj.shape.header ? 1 : 0)\n                    + (obj.shape.phases.length > 0 ? 1 : 0);\n            }\n            else {\n                rowvalue = (obj.shape.header ? 1 : 0);\n            }\n            var columnValue = void 0;\n            if (orientation_1) {\n                columnValue = 0;\n            }\n            else {\n                columnValue = obj.shape.phases.length > 0 ? 1 : 0;\n            }\n            var grid = obj.wrapper.children[0];\n            if (obj.shape.lanes.length > 0) {\n                for (var i = 0; i < obj.shape.lanes.length; i++) {\n                    for (var j = 0; j < obj.shape.lanes[i].childNodes.length; j++) {\n                        var node = obj.shape.lanes[i].childNodes[j];\n                        node.parentId = grid.rows[rowvalue].cells[columnValue].children[0].id;\n                        this.initObject(node);\n                        this.nodes.push(node);\n                        nodesCollection.push(node);\n                        var canvas_1 = node.wrapper;\n                        if (orientation_1) {\n                            columnValue = 0;\n                        }\n                        if (orientation_1 && canvas_1.actualSize.width + canvas_1.margin.left > grid.rows[rowvalue].cells[0].actualSize.width) {\n                            columnValue++;\n                            canvas_1.margin.left = canvas_1.margin.left - grid.rows[rowvalue].cells[0].actualSize.width;\n                        }\n                        canvas_1.measure(new Size(node.width, node.height));\n                        canvas_1.arrange(canvas_1.desiredSize);\n                        grid.rows[rowvalue].cells[columnValue].children[0].children.push(canvas_1);\n                    }\n                    orientation_1 ? rowvalue++ : columnValue++;\n                }\n            }\n            grid.measure(new Size(obj.width, obj.height));\n            grid.arrange(canvas.desiredSize);\n            for (var i = 0; i < nodesCollection.length; i++) {\n                nodesCollection[i].offsetX = nodesCollection[i].wrapper.offsetX;\n                nodesCollection[i].offsetY = nodesCollection[i].wrapper.offsetY;\n            }\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, false);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (!(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                        var stack = selectorModel.nodes[0];\n                        if (stack.shape.type !== 'UmlClassifier' && (!(stack.parentId || this.nameTable[stack.parentId]\n                            && this.nameTable[stack.parentId].shape.type === 'UmlClassifier'))) {\n                            selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                            var stackPanel = selectorModel.nodes[0];\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_2 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_2.children) {\n                        for (var _i = 0, _a = parent_2.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_3 = this.nameTable[actualObject.parentId];\n                    parent_3.wrapper.measure(new Size(parent_3.wrapper.width, actualObject.wrapper.height));\n                    parent_3.wrapper.arrange(parent_3.wrapper.desiredSize);\n                    parent_3.offsetX = parent_3.wrapper.offsetX;\n                    parent_3.offsetY = parent_3.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        newNode = _this.add(group);\n                                    }\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = child2.width / 2;\n                                    lane.offsetY = (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = child1.width / 2;\n                                header.offsetY = child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    _this.removeChildNodes(_this.currentSymbol);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    if (arg.target && (arg.target instanceof Node) && checkParentAsContainer(_this, arg.target)\n                        && canAllowDrop(arg.target)) {\n                        addChildToContainer(_this, arg.target, clonedObject);\n                    }\n                    else {\n                        _this.add(clonedObject, true);\n                    }\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.removeChildNodes = function (node) {\n        if (node instanceof Node && node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                if (this.nameTable[node.children[i]].children) {\n                    this.removeChildNodes(node);\n                }\n                this.removeFromAQuad(this.nameTable[node.children[i]]);\n                this.removeObjectsFromLayer(this.nameTable[node.children[i]]);\n                delete this.nameTable[node.children[i]];\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size } from '../index';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode;\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (actualObject.parentId) {\n            parentNode = diagram.nameTable[actualObject.parentId];\n            parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n            parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n        }\n        if (entryObject.parentId !== '') {\n            parentNode = diagram.nameTable[entryObject.parentId];\n            parentNode.children.push(entryObject.id);\n            parentNode.wrapper.children.push(actualObject.wrapper);\n        }\n        actualObject.parentId = entryObject.parentId;\n        diagram.updateDiagramObject(actualObject);\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.content.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data =\n                            'M' + 20 + ',' + (laneHeight / 2) + ' L' + (laneWidth - 20) + ',' + (laneHeight / 2) + 'z';\n                    }\n                    else {\n                        symbol.shape.data =\n                            'M' + (laneWidth / 2) + ',' + 20 + ' L' + (laneWidth / 2) + ',' + (laneHeight - 20) + 'z';\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = isLane ? this.laneTable[obj.id].width :\n                        this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = isLane ? this.laneTable[obj.id].height :\n                        this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","bottomLeft","middleLeft","topRight","bottomCenter","middleRight","bottomRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","isTarget","reverse","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","state","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","avoidDrawSelector","rendererActions","RendererAction","PreventRenderSelector","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","verticalAlignment","horizontalAlignment","initObject","nodes","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","checkParentAsContainer","nameTable","parentId","rowIndex","parent_1","columns","columnIndex","updateColumnWidth","drag","updateDiagramObject","scale","contai","maxHeight","updateRowHeight","undoObj","cloneObject","clearSelection","deleteChild","entry","category","undoObject","redoObject","addHistoryEntry","select","findBounds","isHeader","rect","Rect","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","renderContainerHelper","selectedObject","helperObject","connectors","actualObject","selectedItems","minWidth","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","Size","arrange","desiredSize","addChildToContainer","parent","currentSymbol","indexOf","addChild","renderStackHighlighter","isVertical","isUml","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","commandHandler","initSwimLane","grid","row","header","createRow","initGridRow","initGridColumns","setDefinitions","index","headerDefine","phases","phaseDefine","lanes","k","laneCollection","addObjectToGrid","DiagramElement","isCalculateDesiredSize","addObject","columnDefinitions","indexValue","rowValue","colValue","laneIndex","phaseCount","parentWrapper","laneNode","childWrapper","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","totalWidth","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","TextElement","refreshTextElement","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","Text","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","Canvas","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","getNativeLayer","getHTMLLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","PointPort","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","conn","connectorEditingToolModule","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","padding","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","template","templatePosition","getAvailableSize","canMeasure","textNodes","textWrapBounds","imageSource","stretch","leftMargin","topMargin","isStack","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","UserHandle","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","GridPanel","childTable","cellStyle","desiredRowHeight","desiredCellWidth","colDefns","rowId","columnId","rowSpan","columnSpan","cell","GridCellItem","addObjectToCell","updateProperties","rowDefns","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","desiredCellHeight","calculateSize","calculateHeight","calculateWidth","colId","addRow","addColumn","removeRow","removeColumn","updateRowIndex","currentIndex","newIndex","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","i_1","z","removeCelll","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","UmlActivityShape","UmlClassifierShape","SwimLane","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","isCanvasUpdate","processId","umlIndex","outEdges","inEdges","isLane","isPhase","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","Header","Lane","Phase","ChildContainer","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","endGroupAction","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","elements","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","detail","which","isMultipleSelect","hasStack","updateContainerProperties","addUmlNode","boundsUpdate","renderSelector","click","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","hasGroup","isChangeProperties","UndoRedo","innerNode","zIndex","updateConnectorEdges","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyManager","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","highlighter","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","child_2","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","addConstraints","constraintsType","constraintsValue","removeConstraints","labels","removelabelExtension","element_1","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","nodesCollection","rowvalue","orientation_1","columnValue","canvas_1","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","updateGridContainer","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","stackPanel","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","isLayout","existingBounds","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","isMeasure","updateAnnotationContent","updateAnnotationWrapper","portWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","lane","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","swimLaneObj","laneObj","child1","child2","findChild","removeChildNodes","addChildNodes","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","initSymbols","symbolGroup","laneHeight","laneWidth","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}