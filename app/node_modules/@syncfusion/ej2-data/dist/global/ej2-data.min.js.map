{"version":3,"file":"ej2-data.min.js","sources":["../../src/query.js","../../src/util.js","../../src/adaptors.js","../../src/manager.js"],"sourcesContent":["import { DataUtil } from './util';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @class */ (function () {\n    /**\n     * Constructor for Query class.\n     * @param  {string|string[]} from?\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        /** @hidden */\n        this.distincts = [];\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        return this;\n    }\n    /**\n     * Sets the primary key.\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        cloned.distincts = this.distincts.slice(0);\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    Query.prototype.distinct = function (fields) {\n        if (typeof fields === 'string') {\n            this.distincts = [].slice.call([fields], 0);\n        }\n        else {\n            this.distincts = fields.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string|number|boolean} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     * @param  {string|number|boolean} searchKey - Defines the search key.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param  {string} operator - Defines the operator how to search data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        operator = operator || 'contains';\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        var order = 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\nexport { Query };\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     * @param  {string|Predicate} field\n     * @param  {string} operator\n     * @param  {string|number|boolean|Predicate|Predicate[]} value\n     * @param  {boolean=false} ignoreCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var isAnd;\n        var ret;\n        if (!this.isComplex && this.comparer) {\n            return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n        }\n        isAnd = this.condition === 'and';\n        for (var i = 0; i < predicate.length; i++) {\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\nexport { Predicate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            grouped[val].items.push(jsonData[i]);\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName)) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = DataUtil.getVal(json, index, fieldName);\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            var dupValue = value;\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), DataUtil.serverTimezoneOffset, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var arr = dupValue.split(/[^0-9]/);\n                    value = DataUtil.dateParse\n                        .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, true);\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), DataUtil.serverTimezoneOffset).toJSON();\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\nexport { DataUtil };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object') {\n            value = value[keyField];\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (ds[i][keyField] === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key = value[keyField];\n        for (i = 0; i < ds.length; i++) {\n            if (ds[i][keyField] === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            data = DataUtil.parse.parseJson(data);\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        this.getAggregateResult(pvt, data, args, groupDs, query);\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: value[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        if (pvt && pvt.groups && pvt.groups.length) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        _this.getModuleName = getValue('getModulename', _this);\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName)) {\n            if (this.getModuleName() === 'ODataV4Adaptor') {\n                operator = DataUtil.odv4UniOperator[predicate.operator];\n            }\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) { return '(' + data[i][key] + ')'; },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) { return '(' + data[i][key] + ')'; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        getValue('getModulename', _this.getModulename());\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModulename = function () {\n        return 'ODataV4Adaptor';\n    };\n    ;\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            selected[splits[0]].push(splits[1]);\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + _this.options.select + \"=\" + selected[expand].join(',') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify({\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            })\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n","import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor ? false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')) {\n            var result = this.adaptor.processQuery(this, query);\n            this.makeRequest(result, deffered, args, query);\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        var ajax = new Ajax(req);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        req = ajax.send();\n        req.catch(function (e) { return true; }); // to handle failure remote requests.        \n        this.requests.push(ajax);\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query, original);\n        if (this.dataSource.offline) {\n            return req;\n        }\n        var deff = new Deferred();\n        var ajax = new Ajax(req);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        ajax.onSuccess = function (data, request) {\n            deff.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n        };\n        ajax.onFailure = function (e) {\n            deff.reject([{ error: e }]);\n        };\n        ajax.send().catch(function (e) { return true; }); // to handle the failure requests.        \n        return deff.promise;\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        if (this.dataSource.offline) {\n            return req;\n        }\n        return this.doAjaxRequest(req);\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = value[keyField];\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        if (this.dataSource.offline) {\n            return res;\n        }\n        return this.doAjaxRequest(res);\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        if (this.dataSource.offline) {\n            return res;\n        }\n        return this.doAjaxRequest(res);\n    };\n    DataManager.prototype.doAjaxRequest = function (res) {\n        var _this = this;\n        var defer = new Deferred();\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        var ajax = new Ajax(res);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        ajax.onSuccess = function (record, request) {\n            try {\n                DataUtil.parse.parseJson(record);\n            }\n            catch (e) {\n                record = [];\n            }\n            record = _this.adaptor.processResponse(DataUtil.parse.parseJson(record), _this, null, request.httpRequest, request);\n            defer.resolve(record);\n        };\n        ajax.onFailure = function (e) {\n            defer.reject([{ error: e }]);\n        };\n        ajax.send().catch(function (e) { return true; }); // to handle the failure requests.\n        return defer.promise;\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n"],"names":["Query","from","this","subQuery","isChild","distincts","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","prototype","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","DataUtil","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","distinct","fields","call","expand","tables","where","fieldName","operator","ignoreCase","ignoreAccent","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sorts","temp","order","endsWith","replace","fnSort","filterQueries","i","length","j","direction","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","fromJson","json","len","fromJSONData","pred","validate","record","isAnd","ret","getObject","toJson","p","preds","consts","GroupGuid","getValue","inst","input","substr","startsWith","fnAscending","fnDescending","x","y","undefined","localeCompare","extractFields","obj","newObj","setValue","jsonArray","newData","aggregates","level","groupDs","jsonData","this_1","isNullOrUndefined","items","count","indx","childLevels","grouped","groupedArray","records","this_2","val","getVal","tempObj","aggs","buildHierarchy","source","lookup","pKey","grp","result","fKeyData","getFieldList","prefix","copyObj","keys_1","Object","keys","prop","nameSpace","splits","split","toString","fromObj","sort","ds","middle","parseInt","left","right","merge","ignoreDiacritics","map","diacritics","join","current","shift","array","index","callAdaptorFunction","adaptor","fnName","param1","param2","getAddParams","adp","dm","req","reqParams","isPlainObject","constructor","isCors","xhr","window","getGuid","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","requiresCompleteRecord","tmp","forEach","data","serverTimezoneOffset","error","Error","message","stack","sum","isNaN","average","min","max","truecount","DataManager","falsecount","operatorSymbols","<",">","<=",">=","==","!=","*=","$=","^=","odBiOperator","lessthan","lessthanorequal","greaterthan","greaterthanorequal","equal","notequal","odUniOperator","endswith","startswith","contains","odv4UniOperator","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","actual","expected","notnull","isnull","processSymbols","parse","parseJson","jsonText","JSON","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","dupValue","ms","exec","dateParse","toTimeZone","Date","isJson","isGuid","replacer","stringify","jsonReplacer","arrayReplacer","keys_3","d","addSelfOffset","toJSON","date","getTimezoneOffset","toUTC","offset","utc","unix","toLocalTime","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__extends","extendStatics","b","setPrototypeOf","__proto__","hasOwnProperty","__","create","Adaptor","options","requestType","dataSource","pvt","processResponse","JsonAdaptor","_super","processQuery","countFlg","agg","batchRequest","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","onWhere","onAggregates","onSearch","onSortBy","fnCompare","onGroup","aggQuery","onPage","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","UrlAdaptor","hierarchyFilters","getQueryRequest","url","request","groups","filters","searches","getFiltersFrom","getRequestQuery","_a","pvtData","contentType","convertToQueryString","request1","selects","getResponseHeader","requests","action","getAggregateResult","original","batchUrl","crudUrl","removeUrl","dataType","extend","changed","added","deleted","table","beforeSend","insertUrl","keyColumn","updateUrl","predicats","pData","aggregateData","groupQuery","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","getModuleName","onPredicate","requiresCast","guid","returnValue","getField","encodeURIComponent","onComplexPredicate","onEachWhere","onEachSearch","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","dataCopy","results","emptyAndBatch","processBatchResponse","versionCheck","version","requiresFormat","keys_4","localTimeReplacer","convertObj","localTime","compareAndRemove","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","stat","method","generateBodyContent","org","change","o","cIdx","jsonObj","substring","exVal","changeGuid","valueOf","ODataV4Adaptor","getModulename","isDate","onExpand","selected","expanded","exArr","item","ex","onDistinct","distinctFields","WebApiAdaptor","Count","Items","WebMethodAdaptor","param","RemoteSaveAdaptor","updateKey","CacheAdaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","crossDomain","offline","headers","timeTillExpiration","cachingPageSize","enableCaching","jsonp","defaultQuery","isDataAvailable","ready","then","setDefaultQuery","deffered","Deferred","nextTick","getDeferedArgs","resolve","makeRequest","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","processData","onSuccess","onFailure","isSelector","reject","process","virtualSelectRecords","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","httpRequest","virtualRecords","ajax","Ajax","send","catch","Promise","all","pResult","cResult","saveChanges","deff","doAjaxRequest","defer","bind"],"mappings":"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"}